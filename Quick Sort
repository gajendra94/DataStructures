#include <iostream>

using namespace std;


class Quick
{
private:

    void exch(int a[] , int i , int j)
    {
        int temp = a[i];
        a[i] = a[j];
        a[j] = temp;
    }

    bool lessA(int i , int j)
    {
        if(i<j)
            return 1;
        return 0;
    }
    int partitionElement(int a[] , int lo , int hi)
    {
        int i=lo , j = hi+1;

        while(1)
        {
            while(lessA(a[++i] , a[lo]))
                if(i==hi)
                    break;

            while(lessA(a[lo] , a[--j]))
                if(j==lo)
                break;

            if(i>=j)
                break;
            exch(a , i , j);
        }
        exch(a , lo , j);

        return j;
    }

    void Sort(int a[] , int lo , int hi)
    {
        if(hi<=lo)
            return;
        int j = partitionElement(a , lo , hi);
        Sort(a , lo , j-1);
        Sort(a,j+1, hi);
    }

public:

    void Sort(int a[] , int n)
    {
        // do  shuffle before this
        Sort(a , 0 , n-1);
    }
};
int main()
{
    int a[] = {1,5,6,2,3,4,8,9,2,1,3,2,2,21};

    Quick ob;
    ob.Sort(a , 14);

    for(int i=0 ; i<14 ; i++)
        cout<<a[i]<<endl;
    return 0;
}
